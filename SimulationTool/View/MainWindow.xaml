<controls:MetroWindow x:Class="SimulationTool.View.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:oxy="http://oxyplot.org/wpf"
                      xmlns:vm="clr-namespace:SimulationTool.ViewModel"
                      xmlns:commands="clr-namespace:SimulationTool.Commands;assembly=SimulationTool"
                      xmlns:local="clr-namespace:SimulationTool;assembly=SimulationTool"
                      xmlns:dialogs="clr-namespace:SimulationTool.Dialogs"
                      Title="Diode Simulation Tool"
                      Height="450"
                      Width="625"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      dialogs:DialogParticipation.Register="{Binding}">
    <Window.Resources>
        <!-- Allows a KeyBinding to be associated with a command defined in the View Model  -->
        <!--<commands:CommandReference x:Key="ExitCommandReference" Command="{Binding ExitCommand}" />-->
        <DataTemplate DataType="{x:Type vm:PlotViewModel}">
            <Grid>
                <Grid.RowDefinitions>

                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <oxy:PlotView Model="{Binding Path=PlotModel}" Grid.Row="1"/>
                <WrapPanel  Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right">
                    <Button Margin="5 5 5 0" Style="{DynamicResource SquareButtonStyle}" Command="{Binding ExportMatlabCommand}" Width="100">Save in *.mat</Button>
                    <Button Margin="5 5 5 0" Style="{DynamicResource SquareButtonStyle}" Command="{Binding ExportJsonCommand}" Width="100">Save in *.json</Button>
                    <Button Margin="5 5 5 0" Style="{DynamicResource SquareButtonStyle}" Command="{Binding ExportSvgCommand}" Width="100">Save in *.svg</Button>
                    <Button Margin="5 5 50 0" Style="{DynamicResource SquareButtonStyle}" Command="{Binding ExportPngCommand}" Width="100">Save in *.png</Button>
                </WrapPanel>
            </Grid>

        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:PreferencesViewModel}">
            <Grid>
                <Label Content="Method:" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top"
                   Grid.Column="0" RenderTransformOrigin="0.505,0.672" />
                <Label Content="Backscattering:" HorizontalAlignment="Left" Margin="10,62,0,0" VerticalAlignment="Top"
                   Grid.Column="0" />
                <ComboBox Grid.Row="0" Grid.Column="0" x:Name="Method" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top" Width="120">
                    <ComboBoxItem>PIC</ComboBoxItem>
                    <ComboBoxItem IsSelected="True">Iterative</ComboBoxItem>
                </ComboBox>
            </Grid>
        </DataTemplate>
        <Ellipse x:Key="AppThemeMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     StrokeThickness="1"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
        <Ellipse x:Key="AccentMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
        <Style x:Key="AppThemeMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
            <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
            <Setter Property="Icon"
                        Value="{StaticResource AppThemeMenuIcon}" />
            <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
        </Style>

        <Style x:Key="AccentColorMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
            <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
            <Setter Property="Icon"
                        Value="{StaticResource AccentMenuIcon}" />
            <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
        </Style>

    </Window.Resources>
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding OnGitHub}"
                    ToolTip="Diode Simulation Tool on GitHub">
                <Rectangle Width="22"
                           Height="22"
                           Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_github}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    <Window.InputBindings>
        <KeyBinding Key="X" Modifiers="Control" Command="{Binding ExitCommand}" />
        <KeyBinding Key="T" Modifiers="Control" Command="{Binding NewWorkspaceCommand}" />
        <KeyBinding Key="W" Modifiers="Control" Command="{Binding CloseWorkspaceCommand}" />
        <KeyBinding Key="Enter" Modifiers="Alt" Command="{Binding ProjectPropertiesCommand}" />
        <KeyBinding Key="F5" Command="{Binding RunCommand}" />
        <KeyBinding Key="F5"  Modifiers="Shift" Command="{Binding AbortCommand}" />
        <KeyBinding Key="F10" Command="{Binding StepCommand}" />
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding NewProjectCommand}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenProjectCommand}" />
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveProjectCommand}" />
        <KeyBinding Key="S" Modifiers="Control + Shift" Command="{Binding SaveAsProjectCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0"
                  Margin="5"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Left">
            <MenuItem Header="Project">
                <MenuItem Command="{Binding NewProjectCommand}" Header="_New" InputGestureText="Ctrl + N" />
                <MenuItem Command="{Binding OpenProjectCommand}" Header="_Open" InputGestureText="Ctrl + O" />
                <Separator />
                <MenuItem Command="{Binding SaveProjectCommand}" Header="_Save" InputGestureText="Ctrl + S" />
                <MenuItem Command="{Binding SaveAsProjectCommand}" Header="_Save as" InputGestureText="Ctrl + Shift + S" />

                <Separator />
                <MenuItem Command="{Binding ExitCommand}" Header="E_xit" InputGestureText="Ctrl + X" />
            </MenuItem>
            <MenuItem Header="Simulation">
                <MenuItem Command="{Binding RunCommand}" Header="_Run" InputGestureText="F5" />
                <MenuItem Command="{Binding AbortCommand}" Header="_Abort" InputGestureText="Shift + F5" />
                <MenuItem Command="{Binding StepCommand}" Header="_Step" InputGestureText="F10" />
            </MenuItem>
            <MenuItem Header="Tab">
                <MenuItem Command="{Binding ProjectPropertiesCommand}" Header="_Properties" InputGestureText="Alt + Enter" />
                <MenuItem Command="{Binding NewWorkspaceCommand}" Header="_New Tab" InputGestureText="Ctrl + T" />
                <MenuItem Command="{Binding CloseWorkspaceCommand}" Header="_Close Tab" InputGestureText="Ctrl + W" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Theme"
                          ItemsSource="{Binding AppThemes, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AppThemeMenuItemStyle}" />
                <MenuItem Header="Accent"
                          ItemsSource="{Binding AccentColors, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AccentColorMenuItemStyle}" />
                <MenuItem IsCheckable="True" Header="ShowInTaskbar"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Path=ShowInTaskbar}" />
                <MenuItem IsCheckable="True" Header="Topmost"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Path=Topmost}" />
                <MenuItem IsCheckable="True" Header="Ignore taskbar on maximize"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Path=IgnoreTaskbarOnMaximize}" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Command="{Binding AboutCommand}" Header="_About" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--<Controls:MetroAnimatedSingleRowTabControl Grid.Row="1" x:Name="MainTabControl"></Controls:MetroAnimatedSingleRowTabControl>-->



            <controls:MetroAnimatedTabControl Grid.Column="1" x:Name="Tabs" controls:TabControlHelper.IsUnderlined="False" ItemsSource="{Binding Workspaces}" SelectedIndex="{Binding SelectedIndex}" TabStripPlacement="Left" Margin="10, 0, 0, 0">

                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type controls:MetroTabItem}">
                        <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="15" />
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabControl.ItemTemplate >
                    <DataTemplate>
                        <TextBlock Text="{Binding Header}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </controls:MetroAnimatedTabControl>
        </Grid>


        <StatusBar Grid.Row="2">
            <StatusBarItem>Epsilon:</StatusBarItem>
            <StatusBarItem Content="{Binding Epsilon}" />
            <StatusBarItem>Iteration:</StatusBarItem>
            <StatusBarItem Content="{Binding Iteration}" />
            <StatusBarItem>Elapsed: total</StatusBarItem>
            <StatusBarItem Content="{Binding Time}" />
            <StatusBarItem>interpolation</StatusBarItem>
            <StatusBarItem Content="{Binding TimeInterpolation}" />
            <StatusBarItem>Poisson</StatusBarItem>
            <StatusBarItem Content="{Binding TimePoisson}" />
            <StatusBarItem>Mover</StatusBarItem>
            <StatusBarItem Content="{Binding TimeIntegration}" />
            <StatusBarItem Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>


    </Grid>
</controls:MetroWindow>
